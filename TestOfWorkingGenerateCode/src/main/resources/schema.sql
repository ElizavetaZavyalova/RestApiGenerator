CREATE TABLE IF NOT EXISTS Users
(
    id SERIAL PRIMARY KEY,
    ROLE varchar(50),
    NAME varchar(50),
    LOGIN  VARCHAR(50) UNIQUE,
    PASSWORD VARCHAR(50)
);
CREATE TABLE IF NOT EXISTS URL
(
    id SERIAL PRIMARY KEY,
    URL VARCHAR(50)
);
CREATE TABLE IF NOT EXISTS BOOKS
(
    id SERIAL PRIMARY KEY,
    PRISE INT,
    NAME varchar(50),
    DESCRIPTION varchar(50),
    URL_ID INT,
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (url_id) REFERENCES URL (id) ON DELETE SET NULL
);
CREATE TABLE IF NOT EXISTS AUDIO
(
    id SERIAL PRIMARY KEY,
    PRISE INT,
    URL_ID INT,
    book_id INT,
    reader_id INT,
    FOREIGN KEY (reader_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (book_id) REFERENCES BOOKS (id) ON DELETE CASCADE,
    FOREIGN KEY (url_id) REFERENCES URL (id) ON DELETE SET NULL
);
CREATE TABLE IF NOT EXISTS COLLECTION
(
    url_id INT,
    FOREIGN KEY (url_id) REFERENCES URL (id) ON DELETE CASCADE,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS KEY_WORDS
(
    id SERIAL PRIMARY KEY,
    NAME varchar(50)
);
CREATE TABLE IF NOT EXISTS BOOK_HAS_KEY_WORD
(
    word_id INT,
    FOREIGN KEY (word_id) REFERENCES KEY_WORDS (id) ON DELETE CASCADE,
    book_id INT,
    FOREIGN KEY (book_id) REFERENCES BOOKS (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS COMMITS
(
    id SERIAL PRIMARY KEY,
    book_id INT,
    message varchar(50),
    open_id INT,
    user_id INT,
    FOREIGN KEY (book_id) REFERENCES BOOKS (id) ON DELETE CASCADE,
    FOREIGN KEY (open_id) REFERENCES COMMITS (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE
);

