{
  "JSON": {
    "UserRequest": {
      "http_prefix": "info/",
      "http": {
        "UserByIdAndName": {
          "get": "name|age|surname|year|id->limit|sort|fields",
          "put": "name-s=|surname-s=|age-i=11|year-i=2024->id",
          "patch": "name|age|surname->id",
          "request": "users/{name-s}|{ge_year-i}"
        },
        "User": {
          "type": "post:name-s=|surname-s=|age-i=11|year-i=2024->id",
          "request": "users",
          "tags": "users|creation",
          "summary": "Создать нового пользователя"
        },
        "UserById": {
          "types": {
            "delete": {
              "httpOk": "OK"
            },
            "patch": {
              "return": "year",
              "entity": "name|age"
            },
            "get": {
              "return": "limit|sort"
            }
          },
          "request": "users/{id}"
        }
      }
    }
  },
  "REQUEST": {
    "request1": "users/{id}/{name-s}",
    "request2": "users/{id}&{name-s}",
    "request3": "users/{id}&[filter]",
    "request4": "users/{id}|{like_name-s}",
    "request5": "users/({id}|{name-s})&({eq_id}|{ne_role-b})"
  },
  "FILTERS": {
    "FilterExample": {
      "filters": {
        "filterCall:call": "packageName#ClassName#funcName",
        "filterAnd:and": "eq_name-s|eq_age"
      },
      "http": {
        "FilterInEndpoint": {
          "type": "get",
          "request": "user/{id}|[filterAnd]&[filterOr]",
          "filters": {
            "filterAnd:1-and": "like_name-s|like_surname-s"
          }
        },
        "FilterInGroup": {
          "type": "get",
          "request": "user/{id}|[filterAnd]/"
        }
      }
    }
  },
  "PSEUDONYMS": {
    "PseudonymsExample": {
      "pseudonyms": {
        "entity": {
          "nameInfo": [
            "login-s=login",
            "sur-s="
          ],
          "date": [
            "old-i=18",
            "year-i=2024"
          ]
        },
        "fields": {
          "name": [
            "login"
          ],
          "age": [
            "old"
          ],
          "surname": [
            "sur",
            "secondName"
          ]
        },
        "tables": {
          "users": [
            "!user",
            "account"
          ]
        }
      },
      "http": {
        "getEndpoint": {
          "get": "nameInfo|date|id",
          "request": "account/{id}/{login-s}/",
          "pseudonyms": {
            "fields": {
              "surname": [
                "login"
              ]
            }
          }
        },
        "postEndpoint": {
          "post": "nameInfo|date->date",
          "request": "user/[filter]",
          "filters": {
            "filter:or": "like_login-s|eq_old"
          }
        }
      }
    }
  },
  "REFS": {
  "RefsExample":{
    "pseudonyms": {
      "joins": {
        "books:users": ["author_id", "id"],
        "type:books": ["book_has_type"],
        "books:book_has_type": ["id", "book_id"],
        "types:book_has_type": ["id", "type_id"]
      }
    },
    "http": {
      "AuthorName": {
        "get": " BooksName|year",
        "request": "users/{like_userName-s}/books/"
      },
      "AuthorOfBook": {
        "get": "UserName",
        "request": "books/{id}/users"
      },
      "AuthorsWhetWriteBooksOfThisType": {
        "get": "UserName",
        "request": "types/{id}/users"
      },
      "BooksByTypeType": {
        "get": "BooksName",
        "request": "types/{id}/books"
      }
    }
  }
  }
}